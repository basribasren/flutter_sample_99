import 'bloc/reader_mode_bloc.dart';import 'models/reader_mode_model.dart';import 'package:basri_s_application10/core/app_export.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application10/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application10/widgets/custom_drop_down.dart';import 'package:basri_s_application10/widgets/custom_switch.dart';import 'package:basri_s_application10/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class ReaderModeScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<ReaderModeBloc>(create: (context) => ReaderModeBloc(ReaderModeState(readerModeModelObj: ReaderModeModel()))..add(ReaderModeInitialEvent()), child: ReaderModeScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(51), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftBlueGray900, margin: getMargin(left: 16, top: 13, bottom: 14), onTap: () {onTapArrowleft136(context);}), centerTitle: true, title: AppbarTitle(text: "lbl_reader_mode".tr)), body: Container(width: double.maxFinite, padding: getPadding(left: 16, top: 26, right: 16, bottom: 26), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_your_edition".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900), Padding(padding: getPadding(top: 7), child: Text("lbl_region_wise".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400)), Padding(padding: getPadding(top: 26), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1, bottom: 1), child: Text("msg_new_edition_alert".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), BlocSelector<ReaderModeBloc, ReaderModeState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(value: isSelectedSwitch, onChanged: (value) {context.read<ReaderModeBloc>().add(ChangeSwitchEvent(value: value));});})])), BlocSelector<ReaderModeBloc, ReaderModeState, TextEditingController?>(selector: (state) => state.group9834Controller, builder: (context, group9834Controller) {return CustomTextFormField(focusNode: FocusNode(), controller: group9834Controller, hintText: "lbl_user_settings".tr, margin: getMargin(top: 26), variant: TextFormFieldVariant.FillBlue50, shape: TextFormFieldShape.CustomBorderTL6, padding: TextFormFieldPadding.PaddingT11, fontStyle: TextFormFieldFontStyle.GilroySemiBold18, textInputAction: TextInputAction.done);}), Padding(padding: getPadding(top: 24), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 3), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_reader_mode".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900), Padding(padding: getPadding(top: 5), child: Text("msg_text_view_of_new".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400))])), BlocSelector<ReaderModeBloc, ReaderModeState, bool?>(selector: (state) => state.isSelectedSwitch1, builder: (context, isSelectedSwitch1) {return CustomSwitch(margin: getMargin(bottom: 23), value: isSelectedSwitch1, onChanged: (value) {context.read<ReaderModeBloc>().add(ChangeSwitch1Event(value: value));});})])), Padding(padding: getPadding(top: 27), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(top: 4, bottom: 7), child: Text("msg_font_to_be_displayed".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), BlocSelector<ReaderModeBloc, ReaderModeState, ReaderModeModel?>(selector: (state) => state.readerModeModelObj, builder: (context, readerModeModelObj) {return CustomDropDown(width: getHorizontalSize(159), focusNode: FocusNode(), icon: Container(margin: getMargin(left: 30), child: CustomImageView(svgPath: ImageConstant.imgArrowdownBlueGray600)), hintText: "lbl_gilroy".tr, variant: DropDownVariant.UnderLineBluegray100, padding: DropDownPadding.PaddingT3, fontStyle: DropDownFontStyle.GilroyMedium16Bluegray900, items: readerModeModelObj?.dropdownItemList ?? [], onChanged: (value) {context.read<ReaderModeBloc>().add(ChangeDropDownEvent(value: value));});})])), Padding(padding: getPadding(top: 23), child: Row(children: [Padding(padding: getPadding(top: 3, bottom: 4), child: Text("lbl_text_size".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), Spacer(), CustomImageView(svgPath: ImageConstant.imgGoogle30x30, height: getSize(30), width: getSize(30)), Padding(padding: getPadding(left: 18, top: 4, bottom: 3), child: Text("lbl_16".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18BlueA700)), CustomImageView(svgPath: ImageConstant.imgFacebook, height: getSize(30), width: getSize(30), margin: getMargin(left: 19))])), Padding(padding: getPadding(top: 26), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1, bottom: 1), child: Text("lbl_dark_mode".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), BlocSelector<ReaderModeBloc, ReaderModeState, bool?>(selector: (state) => state.isSelectedSwitch2, builder: (context, isSelectedSwitch2) {return CustomSwitch(value: isSelectedSwitch2, onChanged: (value) {context.read<ReaderModeBloc>().add(ChangeSwitch2Event(value: value));});})])), Padding(padding: getPadding(top: 29), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1), child: Text("lbl_align".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), CustomImageView(svgPath: ImageConstant.imgGroup15, height: getVerticalSize(22), width: getHorizontalSize(138), margin: getMargin(bottom: 1))])), Padding(padding: getPadding(top: 28), child: Row(children: [Padding(padding: getPadding(top: 3), child: Text("lbl_line_spacing".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), Spacer(), CustomImageView(svgPath: ImageConstant.imgSort24x24, height: getSize(24), width: getSize(24), margin: getMargin(bottom: 1)), Padding(padding: getPadding(left: 12, top: 1, bottom: 1), child: Text("lbl_3".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18BlueA700))])), Padding(padding: getPadding(top: 27, bottom: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("msg_autoplay_next_stories".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), BlocSelector<ReaderModeBloc, ReaderModeState, bool?>(selector: (state) => state.isSelectedSwitch3, builder: (context, isSelectedSwitch3) {return CustomSwitch(value: isSelectedSwitch3, onChanged: (value) {context.read<ReaderModeBloc>().add(ChangeSwitch3Event(value: value));});})]))])))); } 
onTapArrowleft136(BuildContext context) { NavigatorService.goBack(); } 
 }
