import 'bloc/character_count_bloc.dart';import 'models/character_count_model.dart';import 'package:basri_s_application10/core/app_export.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application10/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application10/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';class CharacterCountScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<CharacterCountBloc>(create: (context) => CharacterCountBloc(CharacterCountState(characterCountModelObj: CharacterCountModel()))..add(CharacterCountInitialEvent()), child: CharacterCountScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(49), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftBlueGray900, margin: getMargin(left: 16, top: 12, bottom: 13), onTap: () {onTapArrowleft40(context);}), centerTitle: true, title: AppbarTitle(text: "msg_customer_reviews".tr)), body: Container(width: double.maxFinite, padding: getPadding(left: 16, top: 39, right: 16, bottom: 39), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_4_02".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyBold36), Padding(padding: getPadding(top: 11), child: Text("msg_based_on_2495_reviews".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium18Bluegray400)), Padding(padding: getPadding(top: 29), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(bottom: 4), child: Text("lbl_excellent".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium12Black900)), Padding(padding: getPadding(top: 14), child: Container(height: getVerticalSize(5), width: getHorizontalSize(296), decoration: BoxDecoration(color: ColorConstant.blueGray100), child: ClipRRect(child: LinearProgressIndicator(value: 0.79, backgroundColor: ColorConstant.blueGray100, valueColor: AlwaysStoppedAnimation<Color>(ColorConstant.green600)))))])), Padding(padding: getPadding(top: 13), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_good".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium12Black900)), Padding(padding: getPadding(top: 11), child: Container(height: getVerticalSize(5), width: getHorizontalSize(296), decoration: BoxDecoration(color: ColorConstant.blueGray100), child: ClipRRect(child: LinearProgressIndicator(value: 0.71, backgroundColor: ColorConstant.blueGray100, valueColor: AlwaysStoppedAnimation<Color>(ColorConstant.green300)))))])), Padding(padding: getPadding(top: 17), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("lbl_average".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium12Black900), Padding(padding: getPadding(top: 10), child: Container(height: getVerticalSize(5), width: getHorizontalSize(296), decoration: BoxDecoration(color: ColorConstant.blueGray100), child: ClipRRect(child: LinearProgressIndicator(value: 0.52, backgroundColor: ColorConstant.blueGray100, valueColor: AlwaysStoppedAnimation<Color>(ColorConstant.yellow800)))))])), Padding(padding: getPadding(top: 17), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_below_average".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium12Black900), Padding(padding: getPadding(top: 10), child: Container(height: getVerticalSize(5), width: getHorizontalSize(296), decoration: BoxDecoration(color: ColorConstant.blueGray100), child: ClipRRect(child: LinearProgressIndicator(value: 0.34, backgroundColor: ColorConstant.blueGray100, valueColor: AlwaysStoppedAnimation<Color>(ColorConstant.yellow900)))))])), Padding(padding: getPadding(top: 16), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_poor".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium12Black900)), Container(height: getVerticalSize(5), width: getHorizontalSize(296), margin: getMargin(top: 11), child: Stack(alignment: Alignment.centerLeft, children: [Align(alignment: Alignment.center, child: SizedBox(width: getHorizontalSize(296), child: Divider(height: getVerticalSize(5), thickness: getVerticalSize(5), color: ColorConstant.blueGray100))), CustomImageView(svgPath: ImageConstant.imgVector10, height: getVerticalSize(5), width: getHorizontalSize(39), alignment: Alignment.centerLeft)]))])), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(top: 28), child: Text("msg_provide_a_feedback".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900))), BlocSelector<CharacterCountBloc, CharacterCountState, TextEditingController?>(selector: (state) => state.group4443Controller, builder: (context, group4443Controller) {return CustomTextFormField(focusNode: FocusNode(), controller: group4443Controller, hintText: "msg_write_your_feedback".tr, margin: getMargin(top: 19, bottom: 5), variant: TextFormFieldVariant.OutlineIndigo100, fontStyle: TextFormFieldFontStyle.GilroyRegular14, textInputAction: TextInputAction.done, maxLines: 5);})])))); } 
onTapArrowleft40(BuildContext context) { NavigatorService.goBack(); } 
 }
