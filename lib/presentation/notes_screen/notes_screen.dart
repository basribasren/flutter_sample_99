import '../notes_screen/widgets/notes_item_widget.dart';import 'bloc/notes_bloc.dart';import 'models/notes_item_model.dart';import 'models/notes_model.dart';import 'package:basri_s_application10/core/app_export.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application10/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application10/widgets/custom_button.dart';import 'package:basri_s_application10/widgets/custom_search_view.dart';import 'package:flutter/material.dart';class NotesScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<NotesBloc>(create: (context) => NotesBloc(NotesState(notesModelObj: NotesModel()))..add(NotesInitialEvent()), child: NotesScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(51), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftBlueGray900, margin: getMargin(left: 16, top: 13, bottom: 14), onTap: () {onTapArrowleft118(context);}), centerTitle: true, title: AppbarTitle(text: "lbl_notes".tr), actions: [AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgPlus1, margin: getMargin(left: 16, top: 13, right: 14)), AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgOverflowmenu, margin: getMargin(left: 16, top: 13, right: 30))]), body: Container(width: double.maxFinite, padding: getPadding(left: 16, right: 16), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [BlocSelector<NotesBloc, NotesState, TextEditingController?>(selector: (state) => state.inputFieldController, builder: (context, inputFieldController) {return CustomSearchView(focusNode: FocusNode(), controller: inputFieldController, hintText: "lbl_search".tr, margin: getMargin(top: 22), prefix: Container(margin: getMargin(left: 12, top: 12, right: 8, bottom: 12), child: CustomImageView(svgPath: ImageConstant.imgSearch)), prefixConstraints: BoxConstraints(maxHeight: getVerticalSize(44)), suffix: Container(margin: getMargin(left: 30, top: 12, right: 12, bottom: 12), child: CustomImageView(svgPath: ImageConstant.imgMicrophone)), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(44)));}), Padding(padding: getPadding(top: 24), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: CustomButton(height: getVerticalSize(48), text: "lbl_all_notes".tr, margin: getMargin(right: 8), variant: ButtonVariant.FillBlue50, padding: ButtonPadding.PaddingT15, fontStyle: ButtonFontStyle.GilroyMedium16Black90002, prefixWidget: Container(margin: getMargin(right: 8), child: CustomImageView(svgPath: ImageConstant.imgCalendar)))), Expanded(child: CustomButton(height: getVerticalSize(48), text: "lbl_favourites".tr, margin: getMargin(left: 8), variant: ButtonVariant.FillBlue50, padding: ButtonPadding.PaddingT15, fontStyle: ButtonFontStyle.GilroyMedium16Black90002, prefixWidget: Container(margin: getMargin(right: 8), child: CustomImageView(svgPath: ImageConstant.imgStar))))])), Padding(padding: getPadding(top: 16), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: CustomButton(height: getVerticalSize(48), text: "lbl_hidden".tr, margin: getMargin(right: 8), variant: ButtonVariant.FillBlue50, padding: ButtonPadding.PaddingT15, fontStyle: ButtonFontStyle.GilroyMedium16Black90002, prefixWidget: Container(margin: getMargin(right: 8), child: CustomImageView(svgPath: ImageConstant.imgCall)))), Expanded(child: CustomButton(height: getVerticalSize(48), text: "lbl_trash".tr, margin: getMargin(left: 8), variant: ButtonVariant.FillBlue50, padding: ButtonPadding.PaddingT15, fontStyle: ButtonFontStyle.GilroyMedium16Black90002, prefixWidget: Container(margin: getMargin(right: 8), child: CustomImageView(svgPath: ImageConstant.imgTrash))))])), Padding(padding: getPadding(top: 29), child: Text("lbl_recently_added".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), Padding(padding: getPadding(top: 17), child: BlocSelector<NotesBloc, NotesState, NotesModel?>(selector: (state) => state.notesModelObj, builder: (context, notesModelObj) {return GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(189), crossAxisCount: 2, mainAxisSpacing: getHorizontalSize(16), crossAxisSpacing: getHorizontalSize(16)), physics: NeverScrollableScrollPhysics(), itemCount: notesModelObj?.notesItemList.length ?? 0, itemBuilder: (context, index) {NotesItemModel model = notesModelObj?.notesItemList[index] ?? NotesItemModel(); return NotesItemWidget(model);});}))])))); } 
onTapArrowleft118(BuildContext context) { NavigatorService.goBack(); } 
 }
