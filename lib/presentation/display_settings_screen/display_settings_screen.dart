import 'bloc/display_settings_bloc.dart';import 'models/display_settings_model.dart';import 'package:basri_s_application10/core/app_export.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application10/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application10/widgets/custom_switch.dart';import 'package:flutter/material.dart';class DisplaySettingsScreen extends StatelessWidget {static Widget builder(BuildContext context) { return BlocProvider<DisplaySettingsBloc>(create: (context) => DisplaySettingsBloc(DisplaySettingsState(displaySettingsModelObj: DisplaySettingsModel()))..add(DisplaySettingsInitialEvent()), child: DisplaySettingsScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, appBar: CustomAppBar(height: getVerticalSize(53), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 16, top: 12, bottom: 17), onTap: () {onTapArrowleft54(context);}), centerTitle: true, title: AppbarTitle(text: "msg_display_settings".tr)), body: Container(width: double.maxFinite, padding: getPadding(left: 16, top: 26, right: 16, bottom: 26), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_night_light".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900), Padding(padding: getPadding(top: 12), child: Text("lbl_off".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400)), Padding(padding: getPadding(top: 32), child: Text("msg_adaptive_brightness".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), Padding(padding: getPadding(top: 13), child: Text("msg_optimise_brightness".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400)), Padding(padding: getPadding(top: 30), child: Text("lbl_wallpaper".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), Padding(padding: getPadding(top: 31), child: Text("lbl_sleep".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), Padding(padding: getPadding(top: 13), child: Text("msg_after_30_minutes".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium14Bluegray400)), Padding(padding: getPadding(top: 25, bottom: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 3), child: Text("msg_auto_rotate_screen".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroySemiBold18Bluegray900)), BlocSelector<DisplaySettingsBloc, DisplaySettingsState, bool?>(selector: (state) => state.isSelectedSwitch, builder: (context, isSelectedSwitch) {return CustomSwitch(value: isSelectedSwitch, onChanged: (value) {context.read<DisplaySettingsBloc>().add(ChangeSwitchEvent(value: value));});})]))])))); } 
onTapArrowleft54(BuildContext context) { NavigatorService.goBack(); } 
 }
