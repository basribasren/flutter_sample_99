import 'bloc/custom_form_bloc.dart';import 'models/custom_form_model.dart';import 'package:basri_s_application10/core/app_export.dart';import 'package:basri_s_application10/core/utils/validation_functions.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_image.dart';import 'package:basri_s_application10/widgets/app_bar/appbar_title.dart';import 'package:basri_s_application10/widgets/app_bar/custom_app_bar.dart';import 'package:basri_s_application10/widgets/custom_button.dart';import 'package:basri_s_application10/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class CustomFormScreen extends StatelessWidget {GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<CustomFormBloc>(create: (context) => CustomFormBloc(CustomFormState(customFormModelObj: CustomFormModel()))..add(CustomFormInitialEvent()), child: CustomFormScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, resizeToAvoidBottomInset: false, appBar: CustomAppBar(height: getVerticalSize(49), leadingWidth: 40, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftBlueGray900, margin: getMargin(left: 16, top: 12, bottom: 13), onTap: () {onTapArrowleft65(context);}), centerTitle: true, title: AppbarTitle(text: "lbl_custom_form".tr)), body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: getPadding(left: 16, top: 27, right: 16, bottom: 27), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_first_name".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray900), BlocSelector<CustomFormBloc, CustomFormState, TextEditingController?>(selector: (state) => state.inputFieldController, builder: (context, inputFieldController) {return CustomTextFormField(focusNode: FocusNode(), controller: inputFieldController, hintText: "msg_enter_your_first".tr, margin: getMargin(top: 7), validator: (value) {if (!isText(value)) {return "Please enter valid text";} return null;});})]), Padding(padding: getPadding(top: 19), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_last_name".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray900), BlocSelector<CustomFormBloc, CustomFormState, TextEditingController?>(selector: (state) => state.inputFieldOneController, builder: (context, inputFieldOneController) {return CustomTextFormField(focusNode: FocusNode(), controller: inputFieldOneController, hintText: "msg_enter_your_last".tr, margin: getMargin(top: 6), validator: (value) {if (!isText(value)) {return "Please enter valid text";} return null;});})])), Padding(padding: getPadding(top: 18), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_email_id".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray800), BlocSelector<CustomFormBloc, CustomFormState, TextEditingController?>(selector: (state) => state.inputFieldTwoController, builder: (context, inputFieldTwoController) {return CustomTextFormField(focusNode: FocusNode(), controller: inputFieldTwoController, hintText: "msg_enter_your_email".tr, margin: getMargin(top: 7), textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "Please enter valid email";} return null;});})])), Padding(padding: getPadding(top: 19), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_phone_number".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray800), BlocSelector<CustomFormBloc, CustomFormState, TextEditingController?>(selector: (state) => state.inputFieldThreeController, builder: (context, inputFieldThreeController) {return CustomTextFormField(focusNode: FocusNode(), controller: inputFieldThreeController, hintText: "msg_enter_your_phone".tr, margin: getMargin(top: 6), textInputType: TextInputType.phone, validator: (value) {if (!isValidPhone(value)) {return "Please enter valid phone number";} return null;});})])), Padding(padding: getPadding(top: 19), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_password".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray900), BlocBuilder<CustomFormBloc, CustomFormState>(builder: (context, state) {return CustomTextFormField(focusNode: FocusNode(), controller: state.inputFieldFourController, hintText: "lbl_enter_password".tr, margin: getMargin(top: 6), padding: TextFormFieldPadding.PaddingT12, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<CustomFormBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: getMargin(all: 12), child: CustomImageView(svgPath: state.isShowPassword ? ImageConstant.imgEye : ImageConstant.imgEye))), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(44)), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "Please enter valid password";} return null;}, isObscureText: state.isShowPassword);})])), Padding(padding: getPadding(top: 18), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("msg_confirm_password".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtGilroyMedium16Bluegray900), BlocBuilder<CustomFormBloc, CustomFormState>(builder: (context, state) {return CustomTextFormField(focusNode: FocusNode(), controller: state.inputFieldFiveController, hintText: "lbl_enter_password".tr, margin: getMargin(top: 7), padding: TextFormFieldPadding.PaddingT12, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<CustomFormBloc>().add(ChangePasswordVisibilityEvent1(value: !state.isShowPassword1));}, child: Container(margin: getMargin(all: 12), child: CustomImageView(svgPath: state.isShowPassword1 ? ImageConstant.imgEye : ImageConstant.imgEye))), suffixConstraints: BoxConstraints(maxHeight: getVerticalSize(44)), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "Please enter valid password";} return null;}, isObscureText: state.isShowPassword1);})])), CustomButton(height: getVerticalSize(50), text: "lbl_submit".tr, margin: getMargin(top: 24, bottom: 5))]))))); } 
onTapArrowleft65(BuildContext context) { NavigatorService.goBack(); } 
 }
